# operator templates
####################

# qif operator
qif_op:
  base: OperatorTemplate
  equations:
    - "v' = (v^2 + tau*J*s_in + eta + I_ext) / tau"
    - "s' = (spike-s)/tau_s"
    - "u' = (spike-u)/tau_u"
  variables:
    s: output(0.0)
    v: variable(-60.0)
    u: variable(0.05)
    tau: 10.0
    J: 20.0
    tau_s: 6.0
    eta: 0.0
    tau_u: 200.0
    I_ext: input(0.0)
    spike: input(0.0)
    s_in: input(0.0)

# qif operator
qif_sd_op:
  base: OperatorTemplate
  equations:
    - "v' = (v^2 + tau*J*s_in + eta + I_ext) / tau"
    - "s' = (a*spike-s)/tau_s"
    - "u' = (spike-u)/tau_u"
    - "a' = (1-a)/tau_a + (A0-a)*kappa*spike"
  variables:
    s: output(0.0)
    v: variable(-60.0)
    u: variable(0.05)
    a: variable(1.0)
    tau: 10.0
    J: 20.0
    tau_s: 6.0
    eta: 0.0
    tau_u: 200.0
    tau_a: 10.0
    A0: 0.0
    kappa: 0.0
    I_ext: input(0.0)
    spike: input(0.0)
    s_in: input(0.0)

# edge operator
stdp_op:
  base: OperatorTemplate
  equations:
    - "w' = a*(b*((1-w)*x_s*r_t - w*x_t*r_s) + (1-b)*(x_s*r_t - x_t*r_s)*(w-w^2))"
    - "r_out = r_s*w"
  variables:
    r_out: output(0.0)
    w: variable(1.0)
    a: 0.1
    b: 0.5
    r_s: input(0.0)
    r_t: input(0.0)
    x_s: input(0.0)
    x_t: input(0.0)

# node templates
################

qif_pop:
  base: NodeTemplate
  operators:
    - qif_op

qif_sd_pop:
  base: NodeTemplate
  operators:
    - qif_sd_op

stdp_edge:
  base: EdgeTemplate
  operators:
    - stdp_op
